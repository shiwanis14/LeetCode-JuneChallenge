class Solution {
    public boolean isPowerOfTwo(int n) {
        
        if(n==0)
            return false; //disivion ny 0
        if(n==1)
            return true;
        
        while(n!=1)
        {
           if(n%2!=0)
               return false;
            else n/=2;
                
        }
        return true;
    
    }
}

//solution 2--There are only 31 numbers in total for an 32-bit integer.

return new HashSet<>(Arrays.asList(1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 
16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 
8388608,16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824)).contains(n);

//solution 3
class Solution {
public:
    bool isPowerOfTwo(int n) {
        if(n<=0) return false;
        return !(n&(n-1));
    }
};
